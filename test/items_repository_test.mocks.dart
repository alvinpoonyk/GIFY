// Mocks generated by Mockito 5.0.13 from annotations
// in gify/test/items_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i2;
import 'package:gify/errors/failure.dart' as _i6;
import 'package:gify/models/image_file.dart' as _i7;
import 'package:gify/models/item.dart' as _i3;
import 'package:gify/repositories/items_repository.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeEither<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

class _FakeItem extends _i1.Fake implements _i3.Item {}

/// A class which mocks [ItemsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockItemsRepository extends _i1.Mock implements _i4.ItemsRepository {
  MockItemsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i3.Item>>> getItems() =>
      (super.noSuchMethod(Invocation.method(#getItems, []),
          returnValue: Future<_i2.Either<_i6.Failure, List<_i3.Item>>>.value(
              _FakeEither<_i6.Failure, List<_i3.Item>>())) as _i5
          .Future<_i2.Either<_i6.Failure, List<_i3.Item>>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i3.Item>>> getItemsByCategory(
          {String? category}) =>
      (super.noSuchMethod(
          Invocation.method(#getItemsByCategory, [], {#category: category}),
          returnValue: Future<_i2.Either<_i6.Failure, List<_i3.Item>>>.value(
              _FakeEither<_i6.Failure, List<_i3.Item>>())) as _i5
          .Future<_i2.Either<_i6.Failure, List<_i3.Item>>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i3.Item>>> getItemsByLocation(
          {String? location}) =>
      (super.noSuchMethod(
          Invocation.method(#getItemsByLocation, [], {#location: location}),
          returnValue: Future<_i2.Either<_i6.Failure, List<_i3.Item>>>.value(
              _FakeEither<_i6.Failure, List<_i3.Item>>())) as _i5
          .Future<_i2.Either<_i6.Failure, List<_i3.Item>>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i3.Item>>>
      getItemsByCategoryAndLocation({dynamic category, dynamic location}) =>
          (super
                  .noSuchMethod(
                      Invocation.method(
                          #getItemsByCategoryAndLocation, [], {
                        #category: category,
                        #location: location
                      }),
                      returnValue:
                          Future<_i2.Either<_i6.Failure, List<_i3.Item>>>.value(
                              _FakeEither<_i6.Failure, List<_i3.Item>>()))
              as _i5.Future<_i2.Either<_i6.Failure, List<_i3.Item>>>);
  @override
  _i5.Future<void> createItem(
          {Map<String, dynamic>? itemData,
          _i7.ImageFile? imageFile1,
          _i7.ImageFile? imageFile2}) =>
      (super.noSuchMethod(
          Invocation.method(#createItem, [], {
            #itemData: itemData,
            #imageFile1: imageFile1,
            #imageFile2: imageFile2
          }),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  _i5.Stream<List<_i3.Item>> getUserItemsStream({String? userID}) =>
      (super.noSuchMethod(
              Invocation.method(#getUserItemsStream, [], {#userID: userID}),
              returnValue: Stream<List<_i3.Item>>.empty())
          as _i5.Stream<List<_i3.Item>>);
  @override
  _i5.Future<void> removeItem({String? id}) =>
      (super.noSuchMethod(Invocation.method(#removeItem, [], {#id: id}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  _i5.Future<_i3.Item> getItemById({String? id}) =>
      (super.noSuchMethod(Invocation.method(#getItemById, [], {#id: id}),
              returnValue: Future<_i3.Item>.value(_FakeItem()))
          as _i5.Future<_i3.Item>);
  @override
  _i5.Future<void> editItem(
          {String? id,
          Map<String, dynamic>? itemData,
          _i7.ImageFile? imageFile1,
          _i7.ImageFile? imageFile2}) =>
      (super.noSuchMethod(
          Invocation.method(#editItem, [], {
            #id: id,
            #itemData: itemData,
            #imageFile1: imageFile1,
            #imageFile2: imageFile2
          }),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  String toString() => super.toString();
}
